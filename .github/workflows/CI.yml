name: CI
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  Test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - windows-2019
          - macos-10.15
        d:
          - "ldc-1.27.1"
          - "dmd-2.097.2"
        meson:
          - 0.59.1
        ninja:
          - 1.10.2
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      # Cache
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.dub
            ~/AppData/Local/dub
            ./.dub
            ~/.cache/pip
            ~/AppData/Local/pip/cache
          key: "containers-cache-OS:${{ matrix.os }}-D:${{ matrix.d }}-${{ matrix.meson }}-${{ matrix.ninja }}-deps:${{ hashFiles('./meson.build') }}-${{ hashFiles('./dub.sdl') }}"

      # Setup compilers and tools

      - name: Setup D
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.d }}

      - name: Install gcc-multilib
        if: contains(matrix.os, 'ubuntu')
        run: sudo apt-get install -y gcc-multilib

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Setup Meson
        run: pip install meson==${{ matrix.meson }}

      - name: Setup Ninja
        uses: aminya/install-cmake@new-versions-and-arch
        with:
          cmake: false
          ninja: ${{ matrix.ninja }}

      # Build and Test

      - name: Build
        run: |
          meson setup ./build
          meson compile -C ./build

      - name: Test
        run: |
          make -B -C test/
          dub test
